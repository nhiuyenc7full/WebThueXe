// <auto-generated />
using System;
using HKT2tr5.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HKT2tr5.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191130063549_de")]
    partial class de
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HKT2tr5.Models.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("HKT2tr5.Models.Entities.Banner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link");

                    b.Property<string>("TenBanner");

                    b.HasKey("BannerId");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("HKT2tr5.Models.Entities.DongXe", b =>
                {
                    b.Property<int>("DongXeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NhaSanXuatId");

                    b.Property<string>("TenDongXe");

                    b.HasKey("DongXeId");

                    b.HasIndex("NhaSanXuatId");

                    b.ToTable("DongXe");
                });

            modelBuilder.Entity("HKT2tr5.Models.Entities.LoaiXe", b =>
                {
                    b.Property<int>("LoaiXeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenLoaiXe");

                    b.HasKey("LoaiXeId");

                    b.ToTable("LoaiXe");
                });

            modelBuilder.Entity("HKT2tr5.Models.Entities.MauDongXe", b =>
                {
                    b.Property<int>("MauDongXeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DongXeId");

                    b.Property<int>("MauXeId");

                    b.HasKey("MauDongXeId");

                    b.HasIndex("DongXeId");

                    b.HasIndex("MauXeId");

                    b.ToTable("MauDongXe");
                });

            modelBuilder.Entity("HKT2tr5.Models.Entities.MauXe", b =>
                {
                    b.Property<int>("MauXeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenMauXe");

                    b.HasKey("MauXeId");

                    b.ToTable("MauXe");
                });

            modelBuilder.Entity("HKT2tr5.Models.Entities.NhaSanXuat", b =>
                {
                    b.Property<int>("NhaSanXuatId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenNSX");

                    b.HasKey("NhaSanXuatId");

                    b.ToTable("NhaSanXuat");
                });

            modelBuilder.Entity("HKT2tr5.Models.Entities.Tinh", b =>
                {
                    b.Property<int>("TinhId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenTinh");

                    b.HasKey("TinhId");

                    b.ToTable("Tinh");
                });

            modelBuilder.Entity("HKT2tr5.Models.Entities.Xe", b =>
                {
                    b.Property<int>("XeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId");

                    b.Property<bool>("DaThue");

                    b.Property<bool>("DangKinhDoanh");

                    b.Property<int>("DongXeId");

                    b.Property<decimal>("GiaTheoGio");

                    b.Property<decimal>("GiaTheoNgay");

                    b.Property<string>("ImageDauXe");

                    b.Property<string>("ImageDuoiXe");

                    b.Property<string>("ImageNoiThatXe");

                    b.Property<string>("ImageThanXe");

                    b.Property<int>("LoaiXeId");

                    b.Property<string>("Mau");

                    b.Property<int>("NamSx");

                    b.Property<float>("Rate");

                    b.Property<int>("TinhId");

                    b.Property<string>("Tittle");

                    b.HasKey("XeId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("DongXeId");

                    b.HasIndex("LoaiXeId");

                    b.HasIndex("TinhId");

                    b.ToTable("Xe");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("HKT2tr5.Models.Entities.DongXe", b =>
                {
                    b.HasOne("HKT2tr5.Models.Entities.NhaSanXuat", "NhaSanXuat")
                        .WithMany("DongXe")
                        .HasForeignKey("NhaSanXuatId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HKT2tr5.Models.Entities.MauDongXe", b =>
                {
                    b.HasOne("HKT2tr5.Models.Entities.DongXe", "DongXe")
                        .WithMany("MauDongXe")
                        .HasForeignKey("DongXeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HKT2tr5.Models.Entities.MauXe", "MauXe")
                        .WithMany("MauDongXe")
                        .HasForeignKey("MauXeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HKT2tr5.Models.Entities.Xe", b =>
                {
                    b.HasOne("HKT2tr5.Models.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Xes")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("HKT2tr5.Models.Entities.DongXe", "DongXe")
                        .WithMany("Xe")
                        .HasForeignKey("DongXeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HKT2tr5.Models.Entities.LoaiXe", "LoaiXe")
                        .WithMany("Xe")
                        .HasForeignKey("LoaiXeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HKT2tr5.Models.Entities.Tinh", "Tinh")
                        .WithMany("Xe")
                        .HasForeignKey("TinhId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("HKT2tr5.Models.Entities.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("HKT2tr5.Models.Entities.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HKT2tr5.Models.Entities.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("HKT2tr5.Models.Entities.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
